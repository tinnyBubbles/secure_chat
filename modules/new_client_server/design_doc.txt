Modules:
	socket
	selectors
	namedtuple from collections	
Constants:
	intHEADER_Length = "Length of header to receive"
	strIP_ADDR = "IPv4 address to bind server socket to"	
	intPORT = "Port used for the connection"
Containers:
	dictClients = {socketObj: ClientKey}
	ClientKey = named tuple (clientAddr, msgLength, msgData)
Objects:
	server_sock- server socket object
	sel - DefaultSelector object
Functions:
	receive_message(socketObj):
		Arguments: socketObj (any socket object)
		Returns: ClientKey 
	send_message(socketObj, message_length, message_text):
		Sends a message to the socketObj

		Arguments: socketObj (any socket object)
			   message_length (size of message as an int)
			   message_text (raw message data)
		
	logger(undefined):
		Pass
This script acts as a server in a client-server model. It implements basic socket objects for the connection and an instance of the DefaultSelectors class in the selectors module to monitor socket objects for READevents. 
